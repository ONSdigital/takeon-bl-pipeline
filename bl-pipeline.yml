resource_types:
- name: kubernetes
  type: docker-image
  source:
    repository: zlabjp/kubernetes-resource
    tag: "1.13"

resources:
  - name: git-repo
    type: git
    source:
      uri: {{git_repository}}
      branch: dev
  - name: docker-config
    type: docker-image
    source:
      repository: {{ecr_repository}}
      aws_access_key_id: {{aws_access_key_id}}
      aws_secret_access_key: {{aws_secret_access_key}}
  - name: kubeconfig-file
    type: s3
    source:
      bucket: cicd-kubeconfig
      versioned_file: kube_config.yaml
      access_key_id: {{aws_access_key_id}}
      secret_access_key: {{aws_secret_access_key}}
      region_name: {{aws_region}}
  - name: k8s
    type: kubernetes
    source:
      use_aws_iam_authenticator: true
      aws_eks_cluster_name: {{cluster_name}}
      aws_access_key_id: {{aws_access_key_id}}
      aws_secret_access_key: {{aws_secret_access_key}}
      namespace: take-on

jobs:
  - name: "Docker-Build"
    public: false
    plan:
      - get: git-repo
        trigger: true
      - put: docker-config
        params:
          # The path of a directory containing a Dockerfile to build
          build: git-repo
          tag_as_latest: true
  - name: "Running-Unit-Tests"
    public: false
    plan:
      - get: git-repo
        trigger: true
        passed:
          - "Docker-Build"
      - task: aws-tests 
        config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: maven
            inputs:
              - name: git-repo    
            run:
              path: bash
              args:
                - -c
                - |
                  set -e
                  cd git-repo
                  mvn clean test jacoco:report 
                  awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' target/site/jacoco/jacoco.csv        
  - name: "Deploy-Application"
    public: false
    plan:
      - aggregate:
        - get: docker-config
          trigger: true
          # When specified, only the versions of the resource
          # that made it through the given list of jobs will be considered when
          # triggering and fetching.
          passed:
            - "Docker-Build"
        - get: kubeconfig-file
      - put: k8s
        params:
          kubectl: delete pods -l app=business-layer -n take-on
          wait_until_ready_selector: app=business-layer
          kubeconfig_file: kubeconfig-file/kube_config.yaml
